plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.4.4"
    id("io.micronaut.test-resources") version "4.4.4"
    id("io.micronaut.aot") version "4.4.4"
    id 'application'

}
application {
    mainClass = "com.sotil.micronaut.demo.Application"
}

version = "0.1"
group = "com.sotil.micronaut.demo"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("jakarta.validation:jakarta.validation-api")
    compileOnly("io.micronaut.openapi:micronaut-openapi-annotations")
    runtimeOnly("org.yaml:snakeyaml")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")

    implementation("io.micronaut.data:micronaut-data-tx-hibernate")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    runtimeOnly("org.hibernate:hibernate-core:6.2.0.Final")

    implementation("ch.qos.logback:logback-classic") // Logback
    implementation("org.slf4j:slf4j-api") // SLF4J API
    implementation("org.postgresql:postgresql:42.5.1")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")

    implementation("io.micronaut.discovery:micronaut-discovery-client")
    //implementation("io.micronaut:micronaut-resilience4j")
    //implementation("io.micronaut:micronaut-retry")
    //implementation("io.github.resilience4j:resilience4j-micronaut:1.7.1")

    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-server-netty")

}


application {
    mainClass = "com.sotil.micronaut.demo.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false

micronaut {
    ignoredAutomaticDependencies.add("io.micronaut.data:micronaut-data-processor")
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.sotil.micronaut.demo.*")
    }
    testResources {
        additionalModules.add("jdbc-mysql")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}

//jar {
//    manifest {
//        attributes(
//                'Main-Class': 'io.micronaut.runtime.Micronaut'
//        )
//    }
//}

tasks.named("dockerfileNative") {
    jdkVersion = "21"
}


